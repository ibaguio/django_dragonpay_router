"""
Django settings for django_dragonpay_router project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '@xo1n53t6=5i(z+u^-hb29q8ysmyj8hu$(3uo$y#5(v15_n&qc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []
INSTALLED_APPS = [
    'django_dragonpay_router'
]

MIDDLEWARE = []

ROOT_URLCONF = 'django_dragonpay_router.urls'

WSGI_APPLICATION = 'django_dragonpay_router.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

DRAGONPAY_ROUTES = {}

for key in os.environ.keys():
    _key = key.upper()
    if _key.startswith('DRAGONPAY_ROUTE_'):
        _key = key.replace('DRAGONPAY_ROUTE_', '').lower()
        val = os.environ[key]

        if not val.endswith('/'):
            val += '/'

        print "Adding", _key, val, "to routes"
        DRAGONPAY_ROUTES[_key] = val

if not DRAGONPAY_ROUTES:
    raise Exception('No dragonpay routes found in environment')


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': "[%(asctime)s] %(levelname)s "
                      "[%(module)s.%(filename)s:%(funcName)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S %p"
        },
        'simple': {
            'format': '%(levelname)s %(module)s.%(filename)s:%(funcName)s:%(lineno)s > %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'file-handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': "logs/django_dragonpay_router.log"
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django_dragonpay_router': {
            'handlers': ['console', 'file-handler'],
            'level': 'DEBUG',
            'propagate': True,
        }
    }
}
